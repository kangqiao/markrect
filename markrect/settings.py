"""
Django settings for markrect project.

Generated by 'django-admin startproject' using Django 2.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from django.utils.translation import ugettext_lazy as _
import datetime
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_ROOT = os.path.join(os.path.realpath(os.path.dirname(__file__)), os.pardir)

import sys
from django.utils import six
if six.PY2 and sys.getdefaultencoding()=='ascii':
    import imp
    imp.reload(sys)
    sys.setdefaultencoding('utf-8')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'pd$%10fd9lnq@ox6$k&(kg=1_&z^10%be)n9_69#_$!e)5iy7x')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'dmXadmin.apps.DmxadminConfig',
    'tdata.apps.TdataConfig',
    'cmds.apps.CommandsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bootstrap3',
    'django_extensions',
    'background_task',
    'corsheaders',
    'rest_framework',
    'rest_framework_swagger',
    'jwt_auth',
    'django_celery_beat',
    'django_celery_results',
    'celery',
    'xadmin',
    'crispy_forms',
	'segment',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    #'django.contrib.auth.middleware.AuthenticationMiddleware',
    'markrect.jwt_auth_middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    #'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'markrect.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.jinja2.Jinja2',
        'DIRS': [
            os.path.join(BASE_DIR, 'templates')
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'environment': 'markrect.jinja2.environment',
            # 'context_processors': [
            #     'django.template.context_processors.debug',
            #     'django.template.context_processors.request',
            #     'django.contrib.auth.context_processors.auth',
            #     'django.contrib.messages.context_processors.messages',
            # ],
        },
    },
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(BASE_DIR, "templates"),
            #os.path.join(BASE_DIR, "xapps/common/templates"),
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'debug': DEBUG,
        },
    },
]

WSGI_APPLICATION = 'markrect.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
	
    # 'default': {
    #     'ENGINE': 'django.db.backends.postgresql',
    #     'NAME': 'tripitaka_platform',
    #     'USER': 'lqzj',
    #     'PASSWORD': 'lqdzjsql',
    #     #'HOST': '192.168.2.10'
    #     'HOST': 'localhost'
    # }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#     },
# ]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans'
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True
USE_TZ = False

DATETIME_FORMAT = "%Y年%m月%d日 %H时%M分%S秒"
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/'
#STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
    #os.path.join(BASE_DIR, 'xapps/common/static'),
]

DATA_UPLOAD_MAX_NUMBER_FIELDS = 10000

PAGE_IMAGE_URL_PREFIX = 'https://s3.cn-north-1.amazonaws.com.cn/lqdzj-images'
COL_IMAGE_URL_PREFIX =  'https://s3.cn-north-1.amazonaws.com.cn/lqdzj-col'
IMAGE_URL_PREFIX =      'https://s3.cn-north-1.amazonaws.com.cn/lqdzj-image'
COL_IMAGE_URL_PREFIX =  'https://s3.cn-north-1.amazonaws.com.cn/lqdzj-col'

REST_FRAMEWORK = {
    #'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.IsAuthenticated', ),
    "DEFAULT_PAGINATION_CLASS": "api.pagination.StandardPagination",
    'PAGE_SIZE': 20,
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'jwt_auth.authentication.JWTAuthentication',
        #'rest_framework.authentication.SessionAuthentication',
        'markrect.authentication.CsrfExemptSessionAuthentication',
    )
}

JWT_AUTH = {
    'JWT_RESPONSE_PAYLOAD_HANDLER':
        'jwt_auth.serializers.jwt_response_payload_handler',
    'JWT_PAYLOAD_HANDLER': 'jwt_auth.serializers.jwt_payload_handler',
    'JWT_AUTH_COOKIE': 'auth',
    'JWT_COOKIE_DOMAIN': 'lqdzj.cn',
    'JWT_EXPIRATION_DELTA': datetime.timedelta(days=30),
}

AUTH_USER_MODEL='jwt_auth.Staff'

CORS_ORIGIN_ALLOW_ALL = True

CORS_ORIGIN_WHITELIST = (
    'lqdzj.cn',
    'localhost:8080',
    '127.0.0.1:8000'
)

CORS_ORIGIN_REGEX_WHITELIST = (r'^(https?://)?(\w+\.)?lqdzj\.cn$', )

TEST_RUNNER = 'django.test.runner.DiscoverRunner'

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = True

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale.
USE_L10N = True

# If you set this to False, Django will not use timezone-aware datetimes.
USE_TZ = True

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://media.lawrence.com/media/", "http://example.com/media/"
#MEDIA_URL = '/media/'
## 系统邮箱设置
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.sina.cn'
EMAIL_PORT = 25
EMAIL_HOST_USER = '17074810135@sina.cn'
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PW', '')
EMAIL_USE_TLS = True
EMAIL_FROM = EMAIL_HOST_USER
SERVER_EMAIL = EMAIL_HOST_USER

DATA_UPLOAD_MAX_NUMBER_FIELDS = 100000

UPLOAD_COLUMN_IMAGE = True 
